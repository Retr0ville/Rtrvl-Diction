[{"C:\\Users\\My\\aReactApps\\Diction-io\\diction-io\\src\\index.tsx":"1","C:\\Users\\My\\aReactApps\\Diction-io\\diction-io\\src\\App.tsx":"2","C:\\Users\\My\\aReactApps\\Diction-io\\diction-io\\src\\components\\Header.tsx":"3","C:\\Users\\My\\aReactApps\\Diction-io\\diction-io\\src\\components\\Infobody.tsx":"4","C:\\Users\\My\\aReactApps\\Diction-io\\diction-io\\src\\api\\index.tsx":"5","C:\\Users\\My\\aReactApps\\Diction-io\\diction-io\\src\\api\\suggestApi.tsx":"6","C:\\Users\\My\\aReactApps\\Diction-io\\diction-io\\src\\api\\dictionaryApi.tsx":"7","C:\\Users\\My\\aReactApps\\Diction-io\\diction-io\\src\\api\\randomWordApi.tsx":"8"},{"size":168,"mtime":1651155618410,"results":"9","hashOfConfig":"10"},{"size":1756,"mtime":1651291127996,"results":"11","hashOfConfig":"10"},{"size":4775,"mtime":1651340269960,"results":"12","hashOfConfig":"10"},{"size":6856,"mtime":1651340176249,"results":"13","hashOfConfig":"10"},{"size":160,"mtime":1651272402006,"results":"14","hashOfConfig":"10"},{"size":495,"mtime":1651270740043,"results":"15","hashOfConfig":"10"},{"size":354,"mtime":1651275437567,"results":"16","hashOfConfig":"10"},{"size":401,"mtime":1651275520529,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"8o3u44",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\My\\aReactApps\\Diction-io\\diction-io\\src\\index.tsx",[],["36","37","38","39","40"],"C:\\Users\\My\\aReactApps\\Diction-io\\diction-io\\src\\App.tsx",["41","42"],"/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport React, { useEffect } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport Header from './components/Header';\nimport './App.css';\nimport InfoBody from './components/Infobody';\nimport { define, randomWord } from './api';\nimport { RandomWord } from './api/randomWordApi';\n\nconst App = () => {\n    const [randWord, setRandWord] = React.useState<Partial<RandomWord>>({});\n    const [def, setDef] = React.useState<any>({});\n\n    const getRandomWord = async () => {\n        const results = await randomWord();\n        if(results.word) {\n        setRandWord(results);\n        }\n    };\n    const getDef = async (word: string) => {\n        const results = await define(word);\n        if(!results.error) {\n        setDef(results);\n        }\n        else {\n        setDef({error: \"Definition not found, try another word\"});\n        }\n    };\n    useEffect(() => {\n        setDef({});\n        getRandomWord();\n    }, []);\n    useEffect(() => {\n        console.log(randWord);\n    }, [randWord]);\n    useEffect(() => {\n        console.log(def);\n    }, [def]);\n    const handleSubmit = async (word: string) => {\n        setRandWord({})\n        getDef(word);\n    };\n    \n\n    return (\n        <div className=\"font-monaco\">\n            <div className=\"bg-color-alt w-100 py-3 d-flex align-items-center justify-content-center\">\n                <Header\n                    handleSubmit={handleSubmit}\n                />\n            </div>\n            <InfoBody \n                randWord={randWord}\n                def={def}\n                handleSubmit={handleSubmit}\n            />\n        </div>\n    );\n};\n\nexport default App;\n","C:\\Users\\My\\aReactApps\\Diction-io\\diction-io\\src\\components\\Header.tsx",[],"C:\\Users\\My\\aReactApps\\Diction-io\\diction-io\\src\\components\\Infobody.tsx",["43","44"],"C:\\Users\\My\\aReactApps\\Diction-io\\diction-io\\src\\api\\index.tsx",[],"C:\\Users\\My\\aReactApps\\Diction-io\\diction-io\\src\\api\\suggestApi.tsx",[],"C:\\Users\\My\\aReactApps\\Diction-io\\diction-io\\src\\api\\dictionaryApi.tsx",[],"C:\\Users\\My\\aReactApps\\Diction-io\\diction-io\\src\\api\\randomWordApi.tsx",[],{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":35,"column":9,"nodeType":"57","messageId":"58","endLine":35,"endColumn":20},{"ruleId":"55","severity":1,"message":"56","line":38,"column":9,"nodeType":"57","messageId":"58","endLine":38,"endColumn":20},{"ruleId":"59","severity":1,"message":"60","line":101,"column":52,"nodeType":"61","messageId":"62","endLine":101,"endColumn":55,"suggestions":"63"},{"ruleId":"59","severity":1,"message":"60","line":109,"column":66,"nodeType":"61","messageId":"62","endLine":109,"endColumn":69,"suggestions":"64"},"lines-around-directive",["65"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["66","67"],["68","69"],"padding-line-between-statements",{"messageId":"70","fix":"71","desc":"72"},{"messageId":"73","fix":"74","desc":"75"},{"messageId":"70","fix":"76","desc":"72"},{"messageId":"73","fix":"77","desc":"75"},"suggestUnknown",{"range":"78","text":"79"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"78","text":"80"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"81","text":"79"},{"range":"81","text":"80"},[3288,3291],"unknown","never",[3740,3743]]